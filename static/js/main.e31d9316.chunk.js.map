{"version":3,"sources":["services/cryptoApi.js","services/cryptoNewsApi.js","app/store.js","images/crypto-logo.png","components/Navbar.jsx","components/Loader.jsx","components/Homepage.jsx","components/Exchanges.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/News.jsx","App.js","index.js"],"names":["cryptoApiHeaders","process","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timeperiod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","configureStore","reducer","middleware","getDefaultMiddleware","concat","Navbar","useState","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Loader","Homepage","data","isFetching","globalStats","stats","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Cryptocurrencies","simplified","News","Exchanges","exchangesList","exchanges","map","exchange","Panel","showArrow","header","Text","rank","iconUrl","name","volume","numberOfMarkets","marketShare","HTMLReactParser","description","uuid","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","filteredCoin","coins","filter","coin","toLowerCase","includes","placeholder","onChange","e","target","gutter","currency","xs","sm","lg","id","hoverable","extra","alt","price","marketCap","change","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxis","ticks","beginAtZero","CryptoDetails","useParams","setTimeperiod","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","Option","links","link","type","href","rel","altImage","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","component","style","color","textAlign","ReactDOM","render","basename","store","document","getElementById"],"mappings":"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","file":"static/js/main.e31d9316.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoApiHeaders = {\n  \"x-rapidapi-host\": process.env.REACT_APP_CRYPTO_RAPIDAPI_HOST,\n  \"x-rapidapi-key\": process.env.REACT_APP_CRYPTO_RAPIDAPI_KEY,\n};\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: \"cryptoApi\",\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_CRYPTO_API_URL }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timeperiod }) =>\n        createRequest(`coin/${coinId}/history/${timeperiod}`),\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest(\"/exchanges\"),\n    }),\n  }),\n});\n\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n  useGetExchangesQuery,\n} = cryptoApi;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoNewsHeaders = {\n  \"x-bingapis-sdk\": \"true\",\n  \"x-rapidapi-host\": process.env.REACT_APP_NEWS_RAPIDAPI_HOST,\n  \"x-rapidapi-key\": process.env.REACT_APP_CRYPTO_RAPIDAPI_KEY,\n};\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: \"cryptoNewsApi\",\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_NEWS_API_URL }),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ newsCategory, count }) =>\n        createRequest(\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\n        ),\n    }),\n  }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport { cryptoApi } from \"../services/cryptoApi\";\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware()\n      .concat(cryptoApi.middleware)\n      .concat(cryptoNewsApi.middleware),\n});\n","export default __webpack_public_path__ + \"static/media/crypto-logo.bce8ff05.png\";","import React, { useState, useEffect } from \"react\";\nimport { Menu, Typography, Avatar, Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport {\n  HomeOutlined,\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n} from \"@ant-design/icons\";\n\nimport icon from \"../images/crypto-logo.png\";\n\nexport default function Navbar() {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener(\"resize\", handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\">\n          <Link to=\"/\">Krypto</Link>\n        </Typography.Title>\n        <Button\n          className=\"menu-control-container\"\n          onClick={() => setActiveMenu(!activeMenu)}\n        >\n          <MenuOutlined />\n        </Button>\n      </div>\n\n      {activeMenu && (\n        <Menu theme=\"dark\" className=\"menu\">\n          <Menu.Item key=\"1\" icon={<HomeOutlined />}>\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n          <Menu.Item key=\"2\" icon={<FundOutlined />}>\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n          </Menu.Item>\n          <Menu.Item key=\"3\" icon={<MoneyCollectOutlined />}>\n            <Link to=\"/exchanges\">Exchanges</Link>\n          </Menu.Item>\n          <Menu.Item key=\"4\" icon={<BulbOutlined />}>\n            <Link to=\"/news\">News</Link>\n          </Menu.Item>\n        </Menu>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Spin } from \"antd\";\n\nexport default function Loader() {\n  return (\n    <div className=\"loader\">\n      <Spin />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Typography, Row, Col, Statistic, Divider } from \"antd\";\n\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { Cryptocurrencies, News } from \"../components\";\nimport Loader from \"./Loader\";\n\nexport default function Homepage() {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Typography.Title level={2} className=\"heading\">\n        Global Crypto Stats\n      </Typography.Title>\n      <Row>\n        <Col span={12}>\n          <Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Exchanges\"\n            value={millify(globalStats.totalExchanges)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Market Cap:\"\n            value={`$${millify(globalStats.totalMarketCap)}`}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total 24h Volume\"\n            value={`$${millify(globalStats.total24hVolume)}`}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Markets\"\n            value={millify(globalStats.totalMarkets)}\n          />\n        </Col>\n      </Row>\n\n      <Divider />\n\n      <div className=\"home-heading-container\">\n        <Typography.Title level={2} className=\"home-title\">\n          Top 10 Cryptocurrencies\n        </Typography.Title>\n        <Typography.Title level={3} className=\"show-more\">\n          <Link to=\"/cryptocurrencies\">Show More</Link>\n        </Typography.Title>\n      </div>\n      <Cryptocurrencies simplified />\n\n      <Divider />\n\n      <div className=\"home-heading-container\">\n        <Typography.Title level={2} className=\"home-title\">\n          Latest Crypto News\n        </Typography.Title>\n        <Typography.Title level={3} className=\"show-more\">\n          <Link to=\"/news\">Read More</Link>\n        </Typography.Title>\n      </div>\n      <News simplified />\n    </>\n  );\n}\n","import React from \"react\";\nimport millify from \"millify\";\nimport HTMLReactParser from \"html-react-parser\";\n\nimport { Collapse, Row, Col, Typography, Avatar } from \"antd\";\n\nimport { useGetExchangesQuery } from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\n\nexport default function Exchanges() {\n  const { data, isFetching } = useGetExchangesQuery();\n  const exchangesList = data?.data?.exchanges;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Row className=\"exchanges-heading\">\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Window</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row className=\"exchanges-table\">\n        {exchangesList.map((exchange) => (\n          <Col span={24} key={exchange.uuid}>\n            <Collapse>\n              <Collapse.Panel\n                showArrow={false}\n                header={\n                  <Row>\n                    <Col span={6}>\n                      <Typography.Text>\n                        <strong>{exchange.rank}</strong>\n                      </Typography.Text>\n                      <Avatar\n                        className=\"exchanges-img\"\n                        src={exchange.iconUrl}\n                      />\n                      <Typography.Text>\n                        <strong>{exchange.name}</strong>\n                      </Typography.Text>\n                    </Col>\n                    <Col span={6}>{millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}</Col>\n                  </Row>\n                }\n              >\n                {HTMLReactParser(exchange.description || \"\")}\n              </Collapse.Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Card, Row, Col, Input } from \"antd\";\n\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\n\nexport default function Cryptocurrencies({ simplified }) {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n\n  const [cryptos, setCryptos] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    const filteredCoin = cryptosList?.data?.coins.filter((coin) =>\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    setCryptos(filteredCoin);\n  }, [cryptosList, searchTerm]);\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Cryptocurrencies\"\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      )}\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col\n            key={currency.uuid}\n            className=\"crypto-card\"\n            xs={24}\n            sm={12}\n            lg={6}\n          >\n            <Link to={`/crypto/${currency.id}`} key={currency.id}>\n              <Card\n                hoverable\n                title={`${currency.rank}. ${currency.name}`}\n                extra={\n                  <img\n                    className=\"crypo-image\"\n                    src={currency.iconUrl}\n                    alt={currency.name}\n                  />\n                }\n              >\n                <p>Price: {millify(currency.price)}</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                <p>Daily Change: {millify(currency.change)}</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Row, Typography } from \"antd\";\n\nexport default function LineChart({ coinHistory, currentPrice, coinName }) {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history.length; i++) {\n    coinPrice.push(coinHistory.data.history[i].price);\n    coinTimestamp.push(\n      new Date(coinHistory.data.history[i].timestamp).toLocaleDateString()\n    );\n  }\n\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: \"Price in USD\",\n        data: coinPrice,\n        fill: false,\n        backgroundColor: \"#1890ff\",\n        borderColor: \"#1890ff\",\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxis: {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    },\n  };\n\n  return (\n    <>\n      <Row className=\"chart-heading\">\n        <Typography.Title level={2} className=\"chart-title\">\n          {coinName} Price Chart\n        </Typography.Title>\n        <Col className=\"price-container\">\n          <Typography.Title level={5} className=\"price-change\">\n            {coinHistory?.data?.change}%\n          </Typography.Title>\n          <Typography.Title level={5} className=\"current-price\">\n            Current {coinName} Price: ${currentPrice}\n          </Typography.Title>\n        </Col>\n      </Row>\n\n      <Line data={data} options={options} />\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\n\nimport { Col, Row, Typography, Select, Divider } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\n\nimport {\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n} from \"../services/cryptoApi\";\nimport LineChart from \"./LineChart\";\nimport Loader from \"./Loader\";\n\nexport default function CryptoDetails() {\n  const { coinId } = useParams();\n  const [timeperiod, setTimeperiod] = useState(\"7d\");\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\n    coinId,\n    timeperiod,\n  });\n  const cryptoDetails = data?.data?.coin;\n\n  if (isFetching) return <Loader />;\n\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n\n  const stats = [\n    {\n      title: \"Price to USD\",\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"All-time-high(daily avg.)\",\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  const genericStats = [\n    {\n      title: \"Number Of Markets\",\n      value: cryptoDetails.numberOfMarkets,\n      icon: <FundOutlined />,\n    },\n    {\n      title: \"Number Of Exchanges\",\n      value: cryptoDetails.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: \"Aprroved Supply\",\n      value: cryptoDetails.approvedSupply ? (\n        <CheckOutlined />\n      ) : (\n        <StopOutlined />\n      ),\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Total Supply\",\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Typography.Title level={2} className=\"coin-name\">\n          {cryptoDetails.name} ({cryptoDetails.slug}) Price\n        </Typography.Title>\n        <p>\n          {cryptoDetails.name} live price in US dollars. View value statistics,\n          market cap and supply.\n        </p>\n        <Divider />\n      </Col>\n\n      <Select\n        defaultValue=\"7d\"\n        className=\"select-timeperiod\"\n        placeholder=\"Select Timeperiod\"\n        onChange={(value) => setTimeperiod(value)}\n      >\n        {time.map((date, i) => (\n          <Select.Option key={date + i}>{date}</Select.Option>\n        ))}\n      </Select>\n\n      <LineChart\n        coinHistory={coinHistory}\n        currentPrice={millify(cryptoDetails.price)}\n        coinName={cryptoDetails.name}\n      />\n\n      <Divider />\n\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Typography.Title level={3} className=\"coin-details-heading\">\n              {cryptoDetails.name} Value Statistics\n            </Typography.Title>\n            <p>Stat Overview of {cryptoDetails.name}</p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\" key={title}>\n              <Col className=\"coin-stats-name\">\n                <Typography.Text>{icon}</Typography.Text>\n                <Typography.Text>{title}</Typography.Text>\n              </Col>\n              <Typography.Text className=\"stats\">{value}</Typography.Text>\n            </Col>\n          ))}\n        </Col>\n\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Typography.Title level={3} className=\"coin-details-heading\">\n              Other Statistics\n            </Typography.Title>\n            <p>Stat Overview of all cryptocurrencies</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\" key={title}>\n              <Col className=\"coin-stats-name\">\n                <Typography.Text>{icon}</Typography.Text>\n                <Typography.Text>{title}</Typography.Text>\n              </Col>\n              <Typography.Text className=\"stats\">{value}</Typography.Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n\n      <Divider />\n\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Typography.Title level={3} className=\"coin-details-heading\">\n            What is {cryptoDetails.name}?\n          </Typography.Title>\n          {HTMLReactParser(cryptoDetails.description)}\n        </Row>\n        <Col className=\"coin-links\">\n          <Typography.Title level={3} className=\"coin-details-heading\">\n            {cryptoDetails.name} Links\n          </Typography.Title>\n          {cryptoDetails.links?.map((link) => (\n            <Row className=\"coin-link\" key={link.name + link.type}>\n              <Typography.Title level={5} className=\"link-name\">\n                {link.type}\n              </Typography.Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\n                {link.name}\n              </a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n}\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { Select, Typography, Row, Col, Avatar, Card, Divider } from \"antd\";\n\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\n\nconst altImage =\n  \"https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News\";\n\nexport default function News({ simplified }) {\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\n\n  const { data } = useGetCryptosQuery(100);\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\n    newsCategory,\n    count: simplified ? 6 : 12,\n  });\n\n  if (!cryptoNews?.value) return <Loader />;\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            <Select.Option value=\"Cryptocurrency\">All Cryptos</Select.Option>\n            {data?.data?.coins?.map((currency, i) => (\n              <Select.Option value={currency.name} key={i}>\n                {currency.name}\n              </Select.Option>\n            ))}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Typography.Title className=\"news-title\" level={4}>\n                  {news.name}\n                </Typography.Title>\n                <img\n                  className=\"news-image\"\n                  src={news?.image?.thumbnail?.contentUrl || altImage}\n                  alt={news.name}\n                />\n              </div>\n              <p>\n                {news.description.length > 100\n                  ? `${news.description.substring(0, 100)}...`\n                  : news.description}\n              </p>\n              <Divider />\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar\n                    src={\n                      news.provider[0]?.image?.thumbnail?.contentUrl || altImage\n                    }\n                    alt=\"\"\n                  />\n                  <Typography.Text className=\"provider-name\">\n                    {news.provider[0]?.name}\n                  </Typography.Text>\n                </div>\n                <Typography.Text className=\"provider-date\">\n                  {moment(news.datePublished).startOf(\"ss\").fromNow()}\n                </Typography.Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n}\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\n\nimport {\n  Navbar,\n  Homepage,\n  Exchanges,\n  Cryptocurrencies,\n  CryptoDetails,\n  News,\n} from \"./components\";\n\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Switch>\n              <Route exact path=\"/\" component={Homepage} />\n              <Route exact path=\"/exchanges\" component={Exchanges} />\n              <Route\n                exact\n                path=\"/cryptocurrencies\"\n                component={Cryptocurrencies}\n              />\n              <Route exact path=\"/crypto/:coinId\" component={CryptoDetails} />\n              <Route exact path=\"/news\" component={News} />\n            </Switch>\n          </div>\n        </Layout>\n      </div>\n      <div className=\"footer\">\n        <Typography.Title\n          level={4}\n          style={{ color: \"white\", textAlign: \"center\" }}\n        >\n          <Link to=\"/\" className=\"footer-logo\">\n            Krypto\n          </Link>\n        </Typography.Title>\n        <Typography.Text\n          level={5}\n          style={{ color: \"gray\", textAlign: \"center\" }}\n        >\n          Copyright © 2021\n          <br />\n          All Rights Reserved.\n        </Typography.Text>\n        <Space>\n          <Link to=\"/\">Home</Link> | <Link to=\"/exchanges\">Exchanges</Link> |\n          <Link to=\"/news\">News</Link>\n        </Space>\n      </div>\n    </div>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./app/store\";\nimport App from \"./App\";\n\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/krypto\">\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}